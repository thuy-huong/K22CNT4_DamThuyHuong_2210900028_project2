@model IEnumerable<DamThuyHuong_K22CNT4_2210900028_project2.ViewModels.CartVM>
@{
    ViewBag.Title = "DthIndex";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="image-container">
    <h1>Cart</h1>
</div>

<div class="container" style=" margin-top: 50px;
    background-color: #fff;
    border-radius: 10px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    padding: 20px;
    margin-bottom: 50px;">

    <table>
        <thead>
            <tr>
                <th>Hình Ảnh</th>
                <th>Tên Sản Phẩm</th>
                <th>Đơn giá</th>
                <th>Số Lượng</th>
                <th>thành tiền</th>
                <th></th>
            </tr>
        </thead>

        <tbody>
            @if (Model.Any())
            {
                foreach (var item in Model)
                {
                    
                        var price = item.sanPham.gia;
                        var total = item.soLuong * price; // Tính toán tổng tiền cho hiển thị
                  
                    <tr>
                        <td>
                            <img src="~/Public/UpLoadImg/imgSanPham/@item.sanPham.hinhAnh" alt="@item.sanPham.hinhAnh" width="200px" height="200px">
                        </td>
                        <td>@item.sanPham.tenSanPham</td>
                        <td>
                            <input type="hidden" id="price-@item.sanPham.maSanPham" value="@price" />
                            @price.ToString("N0")
                        </td>
                        <td>
                            <div class="quantity-controls">
                                <button class="quantity-button" onclick="changeQuantity('@item.sanPham.maSanPham', -1)">&#8722;</button>
                                <input type="number" id="quantity-@item.sanPham.maSanPham" class="quantity-input" value="@item.soLuong" min="1" readonly>
                                <button class="quantity-button" onclick="changeQuantity('@item.sanPham.maSanPham', 1)">&#43;</button>
                            </div>
                        </td>
                        <td id="total-@item.sanPham.maSanPham">@total.ToString("N0")</td>
                        <td>
                            <a href="@Url.Action("DthRemoveItemCart", new { id = item.sanPham.maSanPham })" class="btn btn-danger btn-sm">
                                <i class="fa-solid fa-trash"></i>
                            </a>
                        </td>
                    </tr>
                }
                <tr>
                    <td colspan="4" style="text-align: center;"><b>Tổng Cộng</b></td>
                    <td colspan="2" id="grand-total">@Model.Sum(p => p.ThanhTien).ToString("N0")</td>
                </tr>
            }
            else
            {
                <tr>
                    <td colspan="6" style="text-align: center; color: red;"><b>Chưa có sản phẩm trong giỏ hàng!</b></td>
                </tr>
            }
        </tbody>
    </table>
    <div class="text-end" style="display: flex; justify-content: end; padding-top: 7px; ">
        <a class="btn btn-primary " href="@Url.Action("DthIndex","DthCart" )">Cập nhật giỏ hàng</a>
        <a class="btn btn-danger" href="/DthCart/DeleteAllCart">Xóa giỏ hàng</a>
    </div>



    <div class="text-start mt-4">
        <a class="btn btn-warning " href="/DthSanPham/DthIndex">Tiếp tục mua sắm</a>
        @*<a  href="/DthCart/DthThanhToan" class="btn btn-success">Thanh Toán </a>*@
        @Html.ActionLink("Thanh Toán", "DthThanhToan", "null", new { @class = "btn btn-success" })
    </div>
</div>


@section Scripts{
    <script>
        function changeQuantity(productId, change) {
            const quantityInput = document.getElementById(`quantity-${productId}`);
            let currentQuantity = parseInt(quantityInput.value); // Lấy giá trị hiện tại

            // Cập nhật số lượng
            currentQuantity += change;

            // Đảm bảo số lượng không nhỏ hơn 1
            if (currentQuantity < 1) {
                currentQuantity = 1; // Nếu nhỏ hơn 1, đặt lại thành 1
            }

            quantityInput.value = currentQuantity; // Cập nhật giá trị trong input

            // Lấy giá của sản phẩm
            const price = parseFloat(document.getElementById(`price-${productId}`).value); // Giá từ trường ẩn
            const totalPrice = currentQuantity * price; // Tính tổng tiền

            // Cập nhật hiển thị tổng tiền cho sản phẩm
            document.getElementById(`total-${productId}`).textContent = totalPrice.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ','); // Cập nhật tổng tiền trong bảng

            // Cập nhật tổng cộng
            updateGrandTotal();

            // Gọi hàm để cập nhật giỏ hàng
            updateCart(productId, currentQuantity);
            updateCart(productId, currentQuantity);
        }
        function updateGrandTotal() {
            let grandTotal = 0;

            // Lặp qua từng tổng tiền sản phẩm để tính tổng cộng
            document.querySelectorAll("[id^='total-']").forEach(function (totalElement) {
                grandTotal += parseFloat(totalElement.textContent.replace(/,/g, '') || 0);
            });

            // Cập nhật hiển thị tổng cộng
            document.getElementById('grand-total').textContent = grandTotal.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
        }
        function updateCart(productId, quantity) {
            $.ajax({
                url: '/DthCart/UpdateQuantity', // Đường dẫn tới action trong controller
                type: 'POST',
                data: {
                    maSanPham: productId,
                    soLuong: quantity
                },
                success: function (response) {
                    // Xử lý phản hồi thành công
                    console.log('Cập nhật thành công:', response);
                    // Cập nhật lại tổng tiền hoặc thông báo cho người dùng nếu cần
                },
                error: function (xhr, status, error) {
                    // Xử lý lỗi
                    console.error('Cập nhật không thành công:', error);
                    alert('Có lỗi xảy ra khi cập nhật số lượng. Vui lòng thử lại.');
                }
            });
        }
    </script>
}